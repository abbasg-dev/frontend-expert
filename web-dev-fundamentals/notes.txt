Client—Server Model

Client
A machine or process that requests data or service from a server. In the case of the web, browsers are clients that request HTML pages from servers.

Note that a single machine or piece of software can be both a client and a server at the same time. For instance, a single machine could act as a server for end users and as a client for a database.

Server
A machine or process that provides data or service for a client, usually by listening for incoming network calls.

Note that a single machine or piece of software can be both a client and a server at the same time. For instance, a single machine could act as a server for end users and as a client for a database.

Client—Server Model
The paradigm by which modern systems are designed, which consists of clients requesting data or service from servers and servers providing data or service to clients.

Webpage Request Lifecycle

Domain Name System
Oftentimes abbreviated as DNS, the process used for translating domain names to IP Addresses.

Transmission Control Protocol
Oftentimes abbreviated as TCP, a network protocol used to establish a connection between two computers on the internet. TCP is the primary mechanism by which HTTP requests are delivered.

Hypertext Transfer Protocol
Oftentimes abbreviated as HTTP, a common network protocol used for sending requests and responses on the web.

HTTP requests generally have three components: the request line, headers and a body (although the body is optional for some request methods). The request line includes the method, path and HTTP version. Headers contain key value pairs of extra information for the server. The body contains the contents of the request, such as new data being uploaded in a post request.

HTTP responses follow the same general format as requests, but in the top line (referred to as a status line), there is no method or path. Instead, this line contains a status code and message.

HTTPS
The HyperText Transfer Protocol Secure is an extension of HTTP that's used for secure communication online. It requires servers to have trusted certificates and uses the Transport Layer Security (TLS), a security protocol built on top of TCP, to encrypt data communicated between a client and a server.

Application Programming Interface
Oftentimes referred to by the abbreviation API, the interface by which programs agree to communicate with each other.

REST
The Representational State Transfer API architectural style. An API using REST is usually referred to as a RESTful API and must follow these constraints:

Client-server model: There must be a clear distinction between the client and the server, which can be developed independent of each other.
Stateless: The server does not maintain session state, so the client must send all information required to complete a request with the request.
Cacheable: The server should clearly define which responses can be cached by the client.
Layered system: If a layered system is used, the client should not need to know which server it is connected to.
Uniform interface: The interface should be consistent, following these rules:
	Resource identification in requests: Requests should identify resources, but these resources can follow a different representation than that used on the backend.
	Resource manipulation through representations: The client should have enough information about a requested resource to edit that resource.
	Self-descriptive messages: Responses include messages describing how to manipulate the resource, usually as a MIME type.
	Hypermedia as the engine of application state: Responses should include links to future request options.
Code on demand (optional): Optionally, the server can send code to the client to be executed by the client.

RPC
The Remote Procedure Call API architectural style. In this style, the server provides an interface for the client to call certain functions on the server.

SOAP
The Simple Object Access Protocol used for APIs. This protocol provides a specific XML based format for clients and servers to communicate with.

GraphQL
A query language for querying APIs by describing the format of the requested data. GraphQL has major benefits in only sending necessary data on the network and potentially combining requests for multiple resources into a single request.

API Key
A unique key used to identify an application to an API. These keys are sent with each request and thus should be considered public information when working on a public application.

Web Security

Same-Origin Policy
A browser policy limiting the ability of a page from reading resources from different origins. Two resources are from the same origin only if they have the same protocol, host, and port.

CORS
The Cross-Origin Resource Sharing system for circumventing the same-origin policy when a cross-origin request is necessary. A server can allow cross-origin requests by including the Access-Control-Allow-Origin header.

Cross-Site Scripting Attack
A common security vulnerability, also known as XSS, where an attacker is able to run code on a vulnerability site, thus circumventing the same-origin policy. There are a few common forms of cross-site scripting:
	Persistent: A vulnerability that persists beyond a single session, usually from the attacker storing malicious code in the vulnerable database. A common example of this is leaving a comment with code that when appended to the page by the client is executed.
	Non-persistent: A vulnerability that does not persist beyond a single session, usually when an attacker takes advantage of how the client processes a URL query parameter to execute malicious code on the client.
	DOM-based: A vulnerability that happens exclusively on the frontend without any need for sending data to the server, thus making the attack harder to track.

Cross-Site Request Forgery Attack
A common security vulnerability, also known as CSRF, where an attacker sends a request to a server and is able to convince the server it was sent by their client. CSRF attacks can usually be prevented by using a CSRF token, a unique token given to the client that a forged request would not be able to replicate.

OAuth
Open Authorization, a common standard for service authorization. Services can use OAuth to allow users to give other services specific API access to portions of their accounts.

JSON Web Token
A standard for signed JSON tokens, oftentimes referred to by its abbreviation JWT. JSON Web Tokens have three sections:
	A header with information about the encryption algorithm used.
	The payload data.
	The signature, which is created by the server using a secret key so that it can determine if it has been tampered with.
